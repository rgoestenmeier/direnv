#!/usr/local/bin/bash
	set -u

#-------------------------------------------------------------------------------
	_DEPLOY_VERSION=2.0.5-01

#-------------------------------------------------------------------------------
	ARGV=$BASH_ARGV

	HERE="$(cd $(dirname "$ARGV"); pwd)"
	SELF="$(basename "$ARGV")"

        export DIRENV_BASE="$HERE"
	export DIRENV_HOME="$HERE/.env"

        DIRENV_FILE_ENVRC="$DIRENV_BASE/.envrc"
        DIRENV_FILE_CONFIG="$DIRENV_HOME/.envrc.config"
        DIRENV_FILE_SSHENV="$DIRENV_HOME/.ssh-environment"
        DIRENV_FILE_SSHUSR="$DIRENV_HOME/.ssh-user"

	#
	[[ -f "$DIRENV_FILE_CONFIG" ]] && eval $(grep -E '^use_' $DIRENV_FILE_CONFIG | tr "[:lower:]" "[:upper:]")

	#
	export SSH_ENV="$DIRENV_FILE_SSHENV"

	#
	export SSH_USR="default"
	[[ -f "$DIRENV_FILE_SSHUSR" ]] && export SSH_USR="$(< $DIRENV_FILE_SSHUSR)"

#-------------------------------------------------------------------------------
status()
{
	_P1="${1:-}"; shift		# Enabled/Missing
	_P2="${1:-}"; shift		# Komponente: node, ionic, angular, python, ...
	_P3="${1:-}"; shift		# USE_....
	_P4="${1:-}"; shift		# Version
	_P5="$*"			# Pfad

	# USE_... YES/NO/MISSING
	_P3="${_P3^^}"

	if   [[ "$_P3" == "-"   ]]; then _YSN_PRINT=NO
	elif [[ "$_P3" == "NO"  ]]; then _YSN_PRINT=NO
	else                             _YSN_PRINT=YES
	fi

	if [[ "$_P1" == "Enabled"  ]]; then
		if [[ "$_P4" == "HERE" ]]; then
			_P4="-"
			_P4="NOT FOUND"
		fi
	fi

	case "$_P3" in
		YES)	_P3=		;;
		NO)	_P3=Nein	;;
	esac

	if [[ $_YSN_PRINT == YES ]]; then
		printf "%-10s: %-10s | %-5s  %-20s  %s\n" "$_P1" "$_P2" "$_P3" "$_P4" "$_P5"
	fi
}

#-------------------------------------------------------------------------------
use_ssh_agent() {
	_START=${#SSH_ENV}
	_REL_PATH="${DIRENV_HOME:$_START}"

	status  "Init" "SSH Agent"     ""	""							"$_REL_PATH"
	/usr/bin/ssh-agent | sed 's/^echo/#echo/' >"${SSH_ENV}"

	chmod 600 "${SSH_ENV}"
	. "${SSH_ENV}" >/dev/null
}

use_ssh() {
	if [[ ! -f "${SSH_ENV}" ]]; then
		use_ssh_agent;
	else
		. "${SSH_ENV}" > /dev/null
		ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
			use_ssh_agent;
		}
	fi

	ssh-add -q -D
	ssh-add -q ~/.ssh/id_rsa_$SSH_USR
}

#-------------------------------------------------------------------------------
use_python_venv() {
	export DIRENV_STATUS_HAS_PYTHON=NO
	export _PYTHON_PATH="-"
	export _PYTHON_VERSION="-"

	if [[ "YES" == "$USE_PYTHON" ]]; then
		if [[ -f .env/python/bin/activate ]]; then
			export DIRENV_STATUS_HAS_PYTHON=YES
			. .env/python/bin/activate

			export _PYTHON_PATH="$(show_path python)"
			export _PYTHON_VERSION="$(python --version 2>&-|cut -d' ' -f2)"
		fi
	fi
}

#-------------------------------------------------------------------------------
use_flutter() {
	export _FLUTTER_HOME="/Users/Shared/CLOUD/Development.Flutter/current"
	export _FLUTTER_PATH="$(which flutter)"
	export _FLUTTER_VERSION="$(flutter  --version 2>&-|head -1|cut -d' ' -f2)"

	PATH_add $_FLUTTER_HOME/bin:$PATH
}

#-------------------------------------------------------------------------------
use_fastlane() {
	export _FASTLANE_HOME="$HOME/.fastlane"
	export _FASTLANE_PATH="$HOME/bin"
	export _FASTLANE_VERSION="$(fastlane --version 2>&-|tail -1|cut -d' ' -f2)"

	PATH_add $_FASTLANE_PATH
}

#-------------------------------------------------------------------------------
use_yarn() {
	export _YARN_PATH="$(show_path yarn)"
	export _YARN_VERSION="$(yarn --version 2>&-)"
}

#-------------------------------------------------------------------------------
use_ionic() {
	export _IONIC_PATH="$(show_path ionic)"
	export _IONIC_VERSION="$(ionic --version 2>&-)"
}

use_angular() {
	export _ANGULAR_PATH="$(show_path ng)"
	export _ANGULAR_VERSION="$(ng version 2>&- | grep 'Angular CLI' | cut -c14- 2>&-)"
}

#-------------------------------------------------------------------------------
show_path()
{
	local _APP_PATH="$(which "$1")"

	_START=${#HERE}
	_REL_PATH="${_APP_PATH:$_START}"

	echo "HERE$_REL_PATH"
}

#-------------------------------------------------------------------------------
use_config_export()
{
	local _VAR; _VAR="$1";			shift
	local _VAL; _VAL="${1:-MISSING}";	shift

	case $_VAL in
		true|TRUE)	_VAL=YES	;;
		false|FALSE)	_VAL=NO		;;
	esac

	export $_VAR=$_VAL
}



use_config()
{
	[[ -f "$DIRENV_HOME/.envrc.config" ]] && eval $(grep -E '^use_' $DIRENV_HOME/.envrc.config | tr "[:lower:]" "[:upper:]")

	use_config_export USE_IONIC	$USE_IONIC
	use_config_export USE_ANGULAR	$USE_ANGULAR
	use_config_export USE_NODE	$USE_NODE
	use_config_export USE_FLUTTER	$USE_FLUTTER
	use_config_export USE_DOTNET	$USE_DOTNET
	use_config_export USE_PYTHON	$USE_PYTHON
	use_config_export USE_FASTLANE	$USE_FASTLANE
	use_config_export USE_YARN	$USE_YARN
}

#-------------------------------------------------------------------------------
show_config()
{
	echo "USE_IONIC   =$USE_IONIC"
	echo "USE_ANGULAR =$USE_ANGULAR"
	echo "USE_NODE    =$USE_NODE"
	echo "USE_FLUTTER =$USE_FLUTTER"
	echo "USE_DOTNET  =$USE_DOTNET"
	echo "USE_PYTHON  =$USE_PYTHON"
	echo "USE_FASTLANE=$USE_FASTLANE"
	echo "USE_YARN    =$USE_YARN"
}


#-------------------------------------------------------------------------------
	use_config

#-------------------------------------------------------------------------------
	status  "Enabled" "HERE" ""	"$_DEPLOY_VERSION" "$HERE"

#-------------------------------------------------------------------------------
export NODE_VERSIONS="$DIRENV_HOME/node"

export _NODE_VERSION="-"
export _NODE_PATH="-"
export _NPM_VERSION="-"
export _NPM_PATH="-"

if [[ -d "$NODE_VERSIONS" ]]; then
	_NODE_VERSION="$(ls -1rt "$NODE_VERSIONS" | sed '1,$s/^v//' |sort -n |tail -1)"

	use node $_NODE_VERSION
	export PATH="$NODE_VERSIONS/v$_NODE_VERSION/bin:$DIRENV_HOME/bin:$PATH"

	export _NODE_VERSION="$(node --version 2>&- | sed '1,$s/v//g' 2>&-)"
	export _NODE_PATH="$(show_path node)"
	export _NPM_VERSION="$(npm --version 2>&-)"
	export _NPM_PATH="$(show_path npm)"
else
	status  "Enabled" "node"	"$USE_NODE"	"no path for node"	"$NODE_VERSIONS"
fi

status  "Enabled" "node"	"$USE_NODE"	"$_NODE_VERSION"		"$_NODE_PATH"
status  "Enabled" "npm"		"$USE_NODE"	"$_NPM_VERSION"			"$_NPM_PATH"

#-------------------------------------------------------------------------------
use_yarn
status  "Enabled" "yarn"	"$USE_YARN"	"$_YARN_VERSION"		"$_YARN_PATH"

#-------------------------------------------------------------------------------
use_ionic
status  "Enabled" "ionic"	"$USE_IONIC"	"$_IONIC_VERSION"		"$_IONIC_PATH"

#-------------------------------------------------------------------------------
use_angular
status  "Enabled" "angular"	"$USE_ANGULAR"	"$_ANGULAR_VERSION"		"$_ANGULAR_PATH"

#-------------------------------------------------------------------------------
#	use_flutter
#	status  "Enabled" "flutter"	"$USE_FLUTTER"	"$_FLUTTER_VERSION"		"$_FLUTTER_PATH"

#-------------------------------------------------------------------------------
use_fastlane
status  "Enabled" "fastlane"	"$USE_FLUTTER"	"$_FASTLANE_VERSION"	"$_FASTLANE_PATH"

#-------------------------------------------------------------------------------
use_python_venv

if [[ "$DIRENV_STATUS_HAS_PYTHON" == YES ]]; then
	status  "Enabled" "python"	"$USE_PYTHON"	"$_PYTHON_VERSION"		"$_PYTHON_PATH"
else
	status  "Missing" "python"	"$USE_PYTHON"
fi

#-------------------------------------------------------------------------------
use_ssh
status  "Enabled" "ssh"      	""	"$SSH_AGENT_PID"		"$(ssh-add  -l | cut -d' ' -f3)"
